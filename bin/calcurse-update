#!/usr/bin/env ruby

require 'fileutils'
require 'English'
require 'open-uri'
require 'tempfile'
require 'yaml'

calcurse_home = "#{ENV['HOME']}/.config/calcurse/"
config = YAML.safe_load(File.open("#{ENV['HOME']}/.bin/config.yml"))['calcurse']

FileUtils.mv("#{calcurse_home}/apts", "#{calcurse_home}/apts.back")

calendar_file = Tempfile.new('calendar.ics')
lines = []
begin
  open(config['url']) do |calendar|
    event_info = {}
    current_key = ''
    calendar_boilerplate = true
    calendar.each_line do |line|
      line = line.chomp
      # just keep calendar_boilerplate data as-is
      if calendar_boilerplate && !line.start_with?('BEGIN:VEVENT')
        lines << line
      else
        calendar_boilerplate = false
      end

      next if line.start_with? 'BEGIN:VEVENT'

      if line.start_with? 'END:VEVENT'
        event_info['DESCRIPTION'] = %{
        Summary #{event_info.fetch('SUMMARY', 'none')}
        Location #{event_info.fetch('LOCATION', 'none')}
        Description #{event_info.fetch('DESCRIPTION', 'none')}
        }
        lines << 'BEGIN:VEVENT'
        event_info.map { |k, v| lines << "#{k}:#{v}" }
        lines << 'END:VEVENT'
        event_info = {}
      elsif line.match?(/^[A-Z\-]+[:;]{1}/) # standard ical key/value match
        if line.start_with?('DTSTART') || line.start_with?('DTEND')
          line = line.gsub(/;TZID=.+:/, ':')
        end
        key, value = line.split(':', 2)
        current_key = key
        event_info[key] = value
      else # some ical values span multiple lines
        event_info[current_key] << line
      end
    end
  end
  lines << 'END:VCALENDAR'
  calendar_file.write lines.join($INPUT_RECORD_SEPARATOR)
  Kernel.system "calcurse --directory #{calcurse_home} -i #{calendar_file.path}"
  # TODO: rescue here and put in the .back file?
ensure
  calendar_file.close
  calendar_file.unlink
end
# clean up associated notes
Kernel.system "calcurse --directory #{calcurse_home} --gc"
